<Activity mc:Ignorable="sap sap2010" x:Class="Misc_SendResults" this:Misc_SendResults.in_UseOffice365="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Array of folders to attach to the email. All the files in those folders will be included." Name="in_AttachmentFolders" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Array of files to attach to the email." Name="in_Attachments" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Array of values to replace in the subject." Name="in_SubjectValues" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Array of values to replace in the body." Name="in_BodyValues" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Address that receives the email, in case it is variable." Name="in_ToAddress" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Name of the results file. If not provided, a default location and name will be used." Name="io_ResultsFile" Type="InOutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Address that receives the email as carbon copy, in case it is variable." Name="in_CCAddress" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Outlook account used to send the email. If not provided, the default account is used." Name="in_OutlookAccount" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Outlook account used to send emails on behalf of another user or group." Name="in_OutlookOnBehalfOf" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table with the notifications." Name="in_dt_Notifications" Type="InArgument(sd:DataTable)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Data table with all the transaction details." Name="in_dt_TransactionData" Type="InArgument(sd:DataTable)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Check as True if you want to send the notification with the Office 365 activities, otherwise check as false to use the classic ones." Name="in_UseOffice365" Type="InArgument(x:Boolean)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="The ID of your Azure Tenant." Name="in_AzureTenantID" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Name of the folder for the Application Azure credentials. Leave it blank to use the current folder." Name="in_AzureAssetFolder" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Name of the credential asset that contains the Username the Azure Application ID and the password the Secret Key for the O365 Email activity." Name="in_AzureAssetAppIDAndSecret" Type="InArgument(x:String)" />
  </x:Members>
  <this:Misc_SendResults.in_AzureTenantID>
    <InArgument x:TypeArguments="x:String" />
  </this:Misc_SendResults.in_AzureTenantID>
  <this:Misc_SendResults.in_AzureAssetAppIDAndSecret>
    <InArgument x:TypeArguments="x:String" />
  </this:Misc_SendResults.in_AzureAssetAppIDAndSecret>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF000002D8eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjoiU2VuZCBhbiBlbWFpbCBhdCB0aGUgZW5kIG9mIHRoZSBwcm9jZXNzLiBTYXZlcyB0aGUgcmVzdWx0cyBpbiBhbiBFeGNlbCBzcHJlYWRzaGVldCBhbmQgYXR0YWNoZXMgaXQgdG8gdGhlIGVtYWlsIGluIGNhc2UgdGhlIGZpbGUgd2FzIG5vdCBwcm92aWRlZC5cblxuUHJlY29uZGl0aW9uOiBQYXNzIHRoZSByZXF1aXJlZCBhcmd1bWVudHMgKE5vdGlmaWNhdGlvbklELCBOb3RpZmljYXRpb25EdCwgVXNlck9mZmljZTM2NSlcblBvc3QgYWN0aW9uOiBTZW5kcyBhbiBlbWFpbC5cblRoaXMgd29ya2Zsb3cgaXMgcHJvdGVjdGVkIHVuZGVyIHRoZSBVUyBDb3B5cmlnaHQgT2ZmaWNlIGFuZCBpcyBpbnRlbmRlZCBmb3IgdGhlIHNvbGVseSB1c2FnZSBvZiBBdXhpcyBMTEMuXG5Vc2FnZSBvZiB0aGlzIHdvcmtmbG93IHdpdGhvdXQgd3JpdHRlbiBhcHByb3ZhbCBpcyBub3QgcGVybWl0dGVkLiIsIjxWZXJzaW9uPmtfX0JhY2tpbmdGaWVsZCI6MX0=</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>502,1048</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SendResults_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Send an email at the end of the process. Saves the results in an Excel spreadsheet and attaches it to the email in case the file was not provided.&#xA;&#xA;Precondition: Pass the required arguments (NotificationID, NotificationDt, UserOffice365)&#xA;Post action: Sends an email.&#xA;This workflow is protected under the US Copyright Office and is intended for the solely usage of Auxis LLC.&#xA;Usage of this workflow without written approval is not permitted." DisplayName="Misc_SendResults" sap:VirtualizedContainerService.HintSize="976,704" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Misc_SendResults Started" sap:VirtualizedContainerService.HintSize="450,139" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Misc_SendResults Started&quot;]" />
    <Sequence DisplayName="Validate arguments" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Validate TransactionData " sap:VirtualizedContainerService.HintSize="450,463" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[in_dt_TransactionData Is Nothing]" DisplayName="If TransactionData is empty" sap:VirtualizedContainerService.HintSize="388,352" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Then>
            <Throw DisplayName="Throw - Missing TransactionData" Exception="[new BusinessRuleException(&quot;The TransactionData argument is empty.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Validate Notifications" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[in_dt_Notifications Is Nothing]" DisplayName="If Notifications is empty" sap:VirtualizedContainerService.HintSize="388,272" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Then>
            <Throw DisplayName="Throw - Missing dt_Notifications" Exception="[new BusinessRuleException(&quot;The dt_Notifications argument is empty.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_7" />
          </If.Else>
        </If>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="Save results" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[String.IsNullOrEmpty(io_ResultsFile)]" DisplayName="If ResultsFile is empty" sap:VirtualizedContainerService.HintSize="510,588" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="476,326" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign - ResultsFile" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[io_ResultsFile]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory + "\Data\Results_" + Now.ToString("yyyyMMdd_HHmmss") + ".xlsx"]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:WriteRange AddHeaders="True" DataTable="[in_dt_TransactionData]" DisplayName="Write Range - ResultsFile" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Results" StartingCell="A1" WorkbookPath="[io_ResultsFile]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Add the results to the Attachments" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[in_Attachments Is Nothing]" DisplayName="If Attachments is empty" sap:VirtualizedContainerService.HintSize="468,264" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Assign DisplayName="Assign - Attachments" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[in_Attachments]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[{io_ResultsFile}]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign DisplayName="Assign - Attachments multiple" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[in_Attachments]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[in_Attachments.Union({io_ResultsFile}).ToArray]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send Notification.xaml - Invocar archivo de flujo de trabajo" sap:VirtualizedContainerService.HintSize="450,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\Email\Send Notification.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_BodyValues">[in_BodyValues]</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_SubjectValues">[in_SubjectValues]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_NotificationID">EndProcess</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_AttachmentFolders">[in_AttachmentFolders]</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_Attachments">[in_Attachments]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[in_ToAddress]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[in_CCAddress]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_OutlookAccount">[in_OutlookAccount]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_OutlookOnBehalfOf">[in_OutlookOnBehalfOf]</InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Notifications">[in_dt_Notifications]</InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_UseOffice365">[in_UseOffice365]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_AzureTenantID">[in_AzureTenantID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_AzureAssetFolder">[in_AzureAssetFolder]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_AzureAssetAppIDAndSecret">[in_AzureAssetAppIDAndSecret]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message - Misc_SendResults Completed" sap:VirtualizedContainerService.HintSize="450,130" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Misc_SendResults Completed&quot;]" />
  </Sequence>
</Activity>
<Activity mc:Ignorable="sap sap2010" x:Class="Misc_SendNotification" this:Misc_SendNotification.in_UseOffice365="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uma="clr-namespace:UiPath.MicrosoftOffice365.Activities;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umac="clr-namespace:UiPath.MicrosoftOffice365.Activities.Contracts;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umame="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Enums;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Array of values to replace in the body." Name="in_BodyValues" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Array of values to replace in the subject." Name="in_SubjectValues" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="ID of the notification to be sent." Name="in_NotificationID" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Array of folders to attach to the email. All the files in those folders will be included." Name="in_AttachmentFolders" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Array of files to attach to the email." Name="in_Attachments" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Address that receives the email, in case it is variable." Name="in_ToAddress" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Address that receives the email as carbon copy, in case it is variable." Name="in_CCAddress" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Outlook account used to send the email. If not provided, the default account is used. This field is required when using O365." Name="in_OutlookAccount" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Outlook account used to send emails on behalf of another user or group. This field is required when using O365." Name="in_OutlookOnBehalfOf" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table with the notifications." Name="in_dt_Notifications" Type="InArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="Check as True if you want to send the notification with the Office 365 activities, otherwise check as false to use the classic ones." Name="in_UseOffice365" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="The ID of your Azure Tenant." Name="in_AzureTenantID" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Name of the folder for the Application Azure credentials. Leave it blank to use the current folder." Name="in_AzureAssetFolder" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="The ID of your Azure Active Directory Application." Name="in_AzureAssetAppIDAndSecret" Type="InArgument(x:String)" />
  </x:Members>
  <this:Misc_SendNotification.in_AzureTenantID>
    <InArgument x:TypeArguments="x:String" />
  </this:Misc_SendNotification.in_AzureTenantID>
  <this:Misc_SendNotification.in_AzureAssetAppIDAndSecret>
    <InArgument x:TypeArguments="x:String" />
  </this:Misc_SendNotification.in_AzureAssetAppIDAndSecret>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF00000268eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjoiU2VuZCBhbiBlbWFpbCBiYXNlZCBvbiB0aGUgTm90aWZpY2F0aW9ucyBzcHJlYWRzaGVldC5cblxuUHJlY29uZGl0aW9uOiBQYXNzIHRoZSByZXF1aXJlZCBhcmd1bWVudHMgKE5vdGlmaWNhdGlvbklELCBOb3RpZmljYXRpb25EdCwgVXNlck9mZmljZTM2NSlcblBvc3QgYWN0aW9uOiBTZW5kcyBhbiBlbWFpbC5cblRoaXMgd29ya2Zsb3cgaXMgcHJvdGVjdGVkIHVuZGVyIHRoZSBVUyBDb3B5cmlnaHQgT2ZmaWNlIGFuZCBpcyBpbnRlbmRlZCBmb3IgdGhlIHNvbGVseSB1c2FnZSBvZiBBdXhpcyBMTEMuXG5Vc2FnZSBvZiB0aGlzIHdvcmtmbG93IHdpdGhvdXQgd3JpdHRlbiBhcHByb3ZhbCBpcyBub3QgcGVybWl0dGVkLiAgICAgICAgICIsIjxWZXJzaW9uPmtfX0JhY2tpbmdGaWVsZCI6MX0=</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>1794,2151</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Misc_SendNotification_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="100">
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.CommunicationsMining.Activities</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Send an email based on the Notifications spreadsheet.&#xA;&#xA;Precondition: Pass the required arguments (NotificationID, NotificationDt, UserOffice365)&#xA;Post action: Sends an email.&#xA;This workflow is protected under the US Copyright Office and is intended for the solely usage of Auxis LLC.&#xA;Usage of this workflow without written approval is not permitted.         " DisplayName="Misc_SendNotification" sap:VirtualizedContainerService.HintSize="976,3146" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FilteredNotifications" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Misc_SendNotification Started" sap:VirtualizedContainerService.HintSize="554,139" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Misc_SendNotification Started&quot;]" />
    <Sequence DisplayName="Validate arguments" sap:VirtualizedContainerService.HintSize="554,57" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Validate Notifications" sap:VirtualizedContainerService.HintSize="496,383" sap2010:WorkflowViewState.IdRef="Sequence_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[in_dt_Notifications Is Nothing]" DisplayName="If Notifications is empty" sap:VirtualizedContainerService.HintSize="388,272" sap2010:WorkflowViewState.IdRef="If_11">
          <If.Then>
            <Throw DisplayName="Throw - Missing dt_Notifications" Exception="[new BusinessRuleException(&quot;The dt_Notifications argument is empty.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_17" />
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Validate NotificationID" sap:VirtualizedContainerService.HintSize="496,383" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[String.IsNullOrEmpty(in_NotificationID)]" DisplayName="If NotificationID is empty" sap:VirtualizedContainerService.HintSize="388,272" sap2010:WorkflowViewState.IdRef="If_12">
          <If.Then>
            <Throw DisplayName="Throw - Mising NotificationID" Exception="[new BusinessRuleException(&quot;The NotificationID argument is empty.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_4" />
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_20" />
          </If.Else>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Validates if the NotificationID exists. If should appear only one time.&#xA;&#xA;If the NotificationID is not found or appears more than once, an error is reported." DisplayName="Validate if NotificationID exists" sap:VirtualizedContainerService.HintSize="496,953" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:FilterDataTable DataTable="[in_dt_Notifications]" DisplayName="Filter Data Table - Find Notification" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_FilteredNotifications]" SelectColumnsMode="Keep">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["NotificationID"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[in_NotificationID]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <If Condition="[dt_FilteredNotifications.rows.Count = 0]" DisplayName="If NotificationID was not found" sap:VirtualizedContainerService.HintSize="434,272" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Throw DisplayName="Throw - NotificationID not found" Exception="[new BusinessRuleException(&quot;It was not possible to find a notification with the provided ID.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_18" />
          </If.Else>
        </If>
        <If Condition="[dt_FilteredNotifications.rows.Count &gt; 1]" DisplayName="If there is more than one NotificationID" sap:VirtualizedContainerService.HintSize="434,272" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Then>
            <Throw DisplayName="Throw - Multiple NotificationID found" Exception="[new BusinessRuleException(&quot;More than one notification was found with the provided ID.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_19" />
          </If.Else>
        </If>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="Prepare email" sap:VirtualizedContainerService.HintSize="554,2725" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="MessageTo" />
        <Variable x:TypeArguments="x:String" Name="MessageCC" />
        <Variable x:TypeArguments="x:String" Name="MessageBody" />
        <Variable x:TypeArguments="x:String" Name="MessageSubject" />
        <Variable x:TypeArguments="scg:List(x:String)" Name="MessageAttachments" />
        <Variable x:TypeArguments="scg:List(upr:ILocalResource)" Name="ListResourceMessage" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Mail recipient." DisplayName="To" sap:VirtualizedContainerService.HintSize="520,855" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[Not String.IsNullOrEmpty(dt_FilteredNotifications.Rows(0)(&quot;NotificationTo&quot;).ToString)]" DisplayName="If NotificationTo is not empty" sap:VirtualizedContainerService.HintSize="468,378" sap2010:WorkflowViewState.IdRef="If_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Assign DisplayName="Assign - To" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageTo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[dt_FilteredNotifications.Rows(0)("NotificationTo").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign - Initialize To" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageTo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not in_ToAddress Is Nothing]" DisplayName="If To values were provided" sap:VirtualizedContainerService.HintSize="468,354" sap2010:WorkflowViewState.IdRef="If_13">
          <If.Then>
            <Assign DisplayName="Assign - To replace Values" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageTo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_ToAddress]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Carbon copy." DisplayName="Carbon copy (CC)" sap:VirtualizedContainerService.HintSize="520,88" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[Not String.IsNullOrEmpty(dt_FilteredNotifications.Rows(0)(&quot;NotificationCC&quot;).ToString)]" DisplayName="If NotificationCC is not empty" sap:VirtualizedContainerService.HintSize="468,264" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Then>
            <Assign DisplayName="Assign - CC" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageCC]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[dt_FilteredNotifications.Rows(0)("NotificationCC").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign - Initialize CC" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageCC]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not in_CCAddress Is Nothing]" DisplayName="If CC values were provided" sap:VirtualizedContainerService.HintSize="468,264" sap2010:WorkflowViewState.IdRef="If_14">
          <If.Then>
            <Assign DisplayName="Assign - CC replace Values" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageCC]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_CCAddress]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_22" />
          </If.Else>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Email subject, can use placeholders." DisplayName="Subject" sap:VirtualizedContainerService.HintSize="520,88" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[Not String.IsNullOrEmpty(dt_FilteredNotifications.Rows(0)(&quot;NotificationSubject&quot;).ToString)]" DisplayName="If NotificationSubject is not empty" sap:VirtualizedContainerService.HintSize="468,264" sap2010:WorkflowViewState.IdRef="If_5">
          <If.Then>
            <Assign DisplayName="Assign - Subject" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[dt_FilteredNotifications.Rows(0)("NotificationSubject").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign - Initialize Subject" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">%[No subject]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not in_SubjectValues Is Nothing]" DisplayName="If Subject values were provided" sap:VirtualizedContainerService.HintSize="468,264" sap2010:WorkflowViewState.IdRef="If_6">
          <If.Then>
            <Assign DisplayName="Assign - Subject replace Values" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format(MessageSubject, in_SubjectValues)]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_23" />
          </If.Else>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Email body, can use placeholders." DisplayName="Email Body" sap:VirtualizedContainerService.HintSize="520,88" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[Not String.IsNullOrEmpty(dt_FilteredNotifications.Rows(0)(&quot;NotificationBody&quot;).ToString)]" DisplayName="If NotificationBody is not empty" sap:VirtualizedContainerService.HintSize="468,264" sap2010:WorkflowViewState.IdRef="If_7">
          <If.Then>
            <Assign DisplayName="Assign - Body" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[dt_FilteredNotifications.Rows(0)("NotificationBody").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign - Initialize Body" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not in_BodyValues Is Nothing]" DisplayName="If Body values were provided" sap:VirtualizedContainerService.HintSize="344,363" sap2010:WorkflowViewState.IdRef="If_8">
          <If.Then>
            <Assign DisplayName="Assign - Body replace Values" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format(MessageBody, in_BodyValues)]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Add all the attachments to a list." DisplayName="Attachments" sap:VirtualizedContainerService.HintSize="520,88" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign - Initialize Attachments" sap:VirtualizedContainerService.HintSize="518,82" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[MessageAttachments]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)">[new List(Of String)]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[Not in_Attachments Is Nothing]" DisplayName="If Attachments is not empty" sap:VirtualizedContainerService.HintSize="518,460" sap2010:WorkflowViewState.IdRef="If_9">
          <If.Then>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Attachment" sap:VirtualizedContainerService.HintSize="434,278" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_Attachments]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <InvokeMethod DisplayName="Invoke Method - Add" sap:VirtualizedContainerService.HintSize="238,145" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Add">
                    <InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="scg:List(x:String)">[MessageAttachments]</InArgument>
                    </InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="x:String">[item]</InArgument>
                  </InvokeMethod>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_24" />
          </If.Else>
        </If>
        <If Condition="[Not in_AttachmentFolders Is Nothing]" DisplayName="If AttachmentFolders is not empty" sap:VirtualizedContainerService.HintSize="518,741" sap2010:WorkflowViewState.IdRef="If_10">
          <If.Then>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each AttachmentFolder" sap:VirtualizedContainerService.HintSize="436,478" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_AttachmentFolders]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,345" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:String[]" Name="Files" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Get Files" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[Files]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[System.IO.Directory.GetFiles(item)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <InvokeMethod DisplayName="Invoke Method - AddRange" sap:VirtualizedContainerService.HintSize="358,145" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="AddRange">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(x:String)">[MessageAttachments]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="s:String[]">[Files]</InArgument>
                    </InvokeMethod>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </If.Then>
        </If>
      </Sequence>
      <If Condition="[in_UseOffice365]" DisplayName="If use Office 365 Activity" sap:VirtualizedContainerService.HintSize="520,1426" sap2010:WorkflowViewState.IdRef="If_15">
        <If.Then>
          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,25" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="ApplicationID" />
              <Variable x:TypeArguments="ss:SecureString" Name="ApplicationSecret" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - Using Office 365 for Activity" sap:VirtualizedContainerService.HintSize="468,132" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Using Office 365 for Activity&quot;]" />
            <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_AzureAssetAppIDAndSecret]" CacheStrategy="None" DisplayName="Get Credential Application ID &amp; Secret" FolderPath="[in_AzureAssetFolder]" sap:VirtualizedContainerService.HintSize="468,181" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[ApplicationSecret]" Username="[ApplicationID]" />
            <uma:Office365ApplicationScope Account="{x:Null}" ApplicationSecret="{x:Null}" BrowserItemFriendlyName="{x:Null}" BrowserItemId="{x:Null}" BrowserParentItemId="{x:Null}" CertificateAsBase64="{x:Null}" CertificatePassword="{x:Null}" ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" Connector="{x:Null}" ContinueOnError="{x:Null}" EmailAddress="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" Timeout="{x:Null}" Username="{x:Null}" ApplicationId="[ApplicationID]" AuthenticationType="ApplicationIdAndSecret" ConfigLocation="PropertiesPanel" DisplayName="Microsoft Office 365 Scope Email Notification" Environment="Global" sap:VirtualizedContainerService.HintSize="468,461" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_1" OAuthApplication="Custom" SecureApplicationSecret="[ApplicationSecret]" TenantId="[in_AzureTenantID]" UseConnectionService="False">
              <uma:Office365ApplicationScope.AuthenticationScopes>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                  <InArgument x:TypeArguments="x:String">https://graph.microsoft.com/.default</InArgument>
                </scg:List>
              </uma:Office365ApplicationScope.AuthenticationScopes>
              <uma:Office365ApplicationScope.Body>
                <ActivityAction x:TypeArguments="umac:IClientServices">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="umac:IClientServices" Name="ParentScope" />
                  </ActivityAction.Argument>
                  <umam:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" Account="[in_OutlookAccount]" AttachmentsCollection="[in_Attachments]" AuthScopesInvalid="False" Body="[MessageBody]" Cc="[MessageCC.Split(&quot;;&quot;)]" DisplayName="Send Mail Notification" From="[in_OutlookOnBehalfOf]" sap:VirtualizedContainerService.HintSize="434,351" sap2010:WorkflowViewState.IdRef="SendMail_2" Importance="Normal" IsBodyHTML="True" IsDraft="False" Subject="[MessageSubject]" To="[MessageTo.Split(&quot;;&quot;)]">
                    <umam:SendMail.Attachments>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </umam:SendMail.Attachments>
                  </umam:SendMail>
                </ActivityAction>
              </uma:Office365ApplicationScope.Body>
            </uma:Office365ApplicationScope>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="486,1240" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - Using classic send Outlook activity" sap:VirtualizedContainerService.HintSize="452,139" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Using classic send Outlook activity&quot;]" />
            <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="452,114" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(upr:ILocalResource)">[ListResourceMessage]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(upr:ILocalResource)">[New List(Of ILocalResource)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Para cada" sap:VirtualizedContainerService.HintSize="452,497" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[MessageAttachments]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="currentMessage" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="416,341" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="upr:ILocalResource" Name="resourceMessage" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:PathExists Exists="{x:Null}" DisplayName="Ruta existente" sap:VirtualizedContainerService.HintSize="382,122" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[currentMessage]" PathType="File" Resource="[resourceMessage]" />
                    <InvokeMethod DisplayName="Invocar método" sap:VirtualizedContainerService.HintSize="382,159" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(upr:ILocalResource)">[ListResourceMessage]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="upr:ILocalResource">
                        <VisualBasicValue x:TypeArguments="upr:ILocalResource" ExpressionText="resourceMessage" />
                      </InArgument>
                    </InvokeMethod>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <umam:SendMailConnections ArgumentAttachmentPaths="{x:Null}" AttachmentList="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" Mailbox="{x:Null}" ReplyTo="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="Existing" Attachments="[ListResourceMessage]" AuthScopesInvalid="False" Body="[MessageBody]" Cc="[MessageCC.Split(&quot;;&quot;)]" ConnectionId="ee94ea3b-3924-4af1-979a-fb68445656e2" DisplayName="Enviar correo electrónico" sap:VirtualizedContainerService.HintSize="452,430" sap2010:WorkflowViewState.IdRef="SendMailConnections_1" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="[MessageSubject]" To="[MessageTo.Split(&quot;;&quot;)]" UseConnectionService="True">
              <umam:SendMailConnections.AttachmentsBackup>
                <usau:BackupSlot x:TypeArguments="umame:AttachmentInputMode" StoredValue="Existing">
                  <usau:BackupSlot.BackupValues>
                    <scg:Dictionary x:TypeArguments="umame:AttachmentInputMode, scg:List(x:Object)" />
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </umam:SendMailConnections.AttachmentsBackup>
              <umam:SendMailConnections.InputTypeBackup>
                <usau:BackupSlot x:TypeArguments="umame:BodyInputType" StoredValue="HTML">
                  <usau:BackupSlot.BackupValues>
                    <scg:Dictionary x:TypeArguments="umame:BodyInputType, scg:List(x:Object)" />
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </umam:SendMailConnections.InputTypeBackup>
            </umam:SendMailConnections>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message - Misc_SendNotification Completed" sap:VirtualizedContainerService.HintSize="554,130" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Misc_SendNotification Completed&quot;]" />
  </Sequence>
</Activity>